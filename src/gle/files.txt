########################################################################
#                                                                      #
# GLE - Graphics Layout Engine <http://www.gle-graphics.org/>          #
#                                                                      #
# Modified BSD License                                                 #
#                                                                      #
# Copyright (C) 2009 GLE.                                              #
#                                                                      #
# Redistribution and use in source and binary forms, with or without   #
# modification, are permitted provided that the following conditions   #
# are met:                                                             #
#                                                                      #
#    1. Redistributions of source code must retain the above copyright #
# notice, this list of conditions and the following disclaimer.        #
#                                                                      #
#    2. Redistributions in binary form must reproduce the above        #
# copyright notice, this list of conditions and the following          #
# disclaimer in the documentation and/or other materials provided with #
# the distribution.                                                    #
#                                                                      #
#    3. The name of the author may not be used to endorse or promote   #
# products derived from this software without specific prior written   #
# permission.                                                          #
#                                                                      #
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR   #
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED       #
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   #
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY       #
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   #
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE    #
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS        #
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER #
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR      #
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN  #
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                        #
#                                                                      #
########################################################################

#
# files list for GLE to be included by the makefiles
#

INCLUDES = \
all.h \
axis.h \
begin.h \
color.h \
core.h \
font.h \
glepro.h \
op_def.h \
graph.h \
justify.h \
key.h \
d_interface.h \
pass.h \
polish.h \
tex.h \
gprint.h \
token.h \
cutils.h \
var.h \
config.h \
cmdline.h \
glearray.h \
gle-block.h \
numberformat.h \
builtin-double.h \
gle-poppler.h \
gle-interface$(PATH_SEP)gle-shapemath.h \
gle-interface$(PATH_SEP)gle-base.h \
gle-interface$(PATH_SEP)gle-datatype.h

OBJECTS = \
$(BUILD_DIR)$(PATH_SEP)axis.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)b_tab.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)b_text.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)begin.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)core.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)curve.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)color.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)drawit.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)eval.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)file_io.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)fitbez.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)fitcf.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)fn.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)font.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)general.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)op_def.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gprint.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)graph.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)graph2.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)key.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)keyword.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)leastsq.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)memory.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)mychar.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)pass.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)polish.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)run.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)savgol.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)sub.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)tex.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)token.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)var.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)cutils.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)texinterface.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)d_ps.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)d_svg.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)d_x.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)d_dummy.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)d_cairo.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)config.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)numberformat.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)glearray.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)cmdline.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-block.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-sourcefile.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-interface.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-base.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-datatype.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)gle-poppler.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)builtin-double.$(OBJ_SUFF) 

GLE_OBJ =\
$(BUILD_DIR)$(PATH_SEP)gle.$(OBJ_SUFF)

GLE_CPP_LIB_OBJ=\
$(BUILD_DIR)$(PATH_SEP)gle_cpp_lib.$(OBJ_SUFF)

GLEBTOOLOBJS=\
$(BUILD_DIR)$(PATH_SEP)cutils.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)file_io.$(OBJ_SUFF) \
$(BUILD_DIR)$(PATH_SEP)glebtool.$(OBJ_SUFF)

GLE_CPP =gle.cpp

LINKOBJS = \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)img2ps.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)lzwencode.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)glegif.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)glejpeg.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)gletiff.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)glepng.$(OBJ_SUFF) \
bitmap$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)ascii85.$(OBJ_SUFF) \
surface$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)gsurface.$(OBJ_SUFF) \
surface$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)hide.$(OBJ_SUFF) \
surface$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)fcontour.$(OBJ_SUFF) \
surface$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)ffitcontour.$(OBJ_SUFF) \
surface$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)gcontour.$(OBJ_SUFF) \
letzfitz$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)let.$(OBJ_SUFF) \
letzfitz$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)fit.$(OBJ_SUFF) \
letzfitz$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)ffit.$(OBJ_SUFF) \
tokens$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)Tokenizer.$(OBJ_SUFF) \
tokens$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)StringKeyHash.$(OBJ_SUFF) \
tokens$(PATH_SEP)$(BUILD_DIR)$(PATH_SEP)BinIO.$(OBJ_SUFF)

SVGOBJS =

PNGOBJS =

JPEGOBJS =

!ifdef HAVE_LIBTIFF
OBJECTS = $(OBJECTS) $(TIFFOBJS)
!endif

!ifdef HAVE_LIBPNG
OBJECTS = $(OBJECTS) $(PNGOBJS)
!endif

!ifdef HAVE_LIBJPEG
OBJECTS = $(OBJECTS) $(JPEGOBJS)
!endif
#$(PSOBJS) $(SVGOBJS)


